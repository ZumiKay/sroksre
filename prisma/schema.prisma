// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  EDITOR
}

model User {
  id               Int           @id @default(autoincrement())
  firstname        String
  lastname         String?
  email            String        @unique
  role             Role          @default(USER)
  phonenumber      String?       @unique
  password         String        @unique
  shipping_address String?
  whislist         Json?
  reviews          Reviews[]
  products         Products[]
  questions        Questions[]
  sessions         Usersession[]
  answers          Answers[]
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model Usersession {
  session_id String   @id @default(uuid())
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Parentcategories {
  id          Int               @id @default(autoincrement())
  name        String
  description String?
  sub         Childcategories[]
  products    Products[]
}

model Childcategories {
  id                 Int               @id @default(autoincrement())
  name               String
  Parentcategories   Parentcategories? @relation(fields: [parentcategoriesId], references: [id])
  parentcategoriesId Int?
  Products           Products[]
}

model Products {
  id                Int              @id @default(autoincrement())
  name              String
  price             Decimal          @default(0.00)
  description       String           @default("")
  stock             Int              @default(0)
  covers            Productcover[]
  details           Info[]
  parentcategory_id Int
  childcategory_id  Int?
  order_id          String?
  review_id         Int?
  reviews           Reviews[]
  promotion_id      Int?
  discount          Decimal?
  promotion         Promotion?       @relation(fields: [promotion_id], references: [id], onDelete: SetNull)
  order             Orders?          @relation(fields: [order_id], references: [id], onDelete: SetNull)
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  User              User?            @relation(fields: [userId], references: [id])
  userId            Int?
  parentcateogries  Parentcategories @relation(fields: [parentcategory_id], references: [id])
  childcategories   Childcategories? @relation(fields: [childcategory_id], references: [id])
}

model Productcover {
  id        Int      @id @default(autoincrement())
  url       String
  name      String
  type      String
  isSaved   Boolean? @default(true)
  Products  Products @relation(fields: [productId], references: [id])
  productId Int
}

model Status {
  id         Int      @id @default(autoincrement())
  name       String
  orders     Orders[]
  descrition String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Orders {
  id         String     @id @default(uuid())
  product_id Int
  seller_id  Int
  buyer_id   Int
  status_id  Int
  products   Products[]
  quantity   Int
  status     Status     @relation(fields: [status_id], references: [id], onDelete: SetDefault)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Reviews {
  id          Int      @id @default(autoincrement())
  value       Int      @default(0)
  description String   @default("No comment")
  user_id     Int
  product_id  Int
  product     Products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Banner {
  id        Int         @id @default(autoincrement())
  name      String
  type      String
  image     Json
  show      Boolean     @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Promotion Promotion[]
}

model Promotion {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  banner_id   Int?
  banner      Banner?    @relation(fields: [banner_id], references: [id])
  expireAt    DateTime
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Products    Products[]
}

model Answers {
  id          Int       @id @default(autoincrement())
  answer      String
  user_id     Int
  question_id Int
  question    Questions @relation(fields: [question_id], references: [id], onDelete: Cascade)
  user        User      @relation(fields: [user_id], references: [id], onDelete: SetDefault)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Questions {
  id        Int       @id @default(autoincrement())
  question  String
  answer_id Int
  user_id   Int
  user      User      @relation(fields: [user_id], references: [id], onDelete: SetDefault)
  answers   Answers[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Info {
  id         Int       @id @default(autoincrement())
  info_title String
  info_value String[]
  info_type  String
  product_id Int?
  product    Products? @relation(fields: [product_id], references: [id], onDelete: Cascade)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
